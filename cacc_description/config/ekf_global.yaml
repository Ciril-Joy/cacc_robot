ekf_filter_node_global: # Renamed to avoid conflicts
  ros__parameters:
    frequency: 20.0 # Can be lower than local EKF
    sensor_timeout: 0.2
    two_d_mode: false
    transform_time_offset: 0.0
    transform_timeout: 0.0
    print_diagnostics: true
    debug: false
    publish_tf: true # This EKF should publish map->odom

    map_frame: map      # Global frame
    odom_frame: odom    # Local, continuous frame (output of ekf_local)
    base_link_frame: base_link # Robot's base
    world_frame: map    # For this global EKF, world_frame is map
    publish_tf: true   
         # CRITICAL: This MUST be true for it to publish map->odom
    # --- Odometry from local EKF ---
    odom0: /odometry/local_ekf # This is the output of ekf_local_node
                            # Name it something like /odometry/local_ekf if you change the output topic of ekf_local
    odom0_config: [true,  true,  false, # X, Y, Z (fuse X, Y from local EKF)
                   false, false, true,  # Roll, Pitch, Yaw (fuse Yaw from local EKF)
                   false, false, false, # dX, dY, dZ
                   false, false, false, # dRoll, dPitch, dYaw
                   false, false, false]
    odom0_differential: false
    odom0_relative: false # Odometry is usually not relative from EKF
    odom0_queue_size: 10

    # --- Odometry from navsat_transform_node ---
    odom1: /odometry/gps # This is the output of navsat_transform_node
    odom1_config: [true,  true,  false, # X, Y, Z (fuse X, Y from GPS)
                   false, false, false, # Roll, Pitch, Yaw (DO NOT fuse yaw from GPS directly, it's often noisy)
                   false, false, false, # dX, dY, dZ
                   false, false, false, # dRoll, dPitch, dYaw
                   false, false, false]
    odom1_differential: false
    odom1_relative: false
    odom1_queue_size: 2

    # --- IMU (for orientation, especially yaw if not from odom0) ---
    # You can re-add IMU here if you want its orientation to directly affect the map frame pose.
    # Generally, the odom0 (local EKF output) should have good orientation.
    # If odom0 provides good yaw, you might not need imu0 here.
    imu0: /imu/data
    imu0_config: [false, false, false,
                  false, false, true,  # Only use Yaw from IMU for global correction
                  false, false, false,
                  false, false, false,
                  false, false, false]
    imu0_differential: false
    imu0_relative: true # If your IMU provides absolute yaw (magnetometer fused)
    imu0_queue_size: 10
    imu0_remove_gravitational_acceleration: true

    # --- Process Noise Covariance ---
    # Similar to ekf_local.yaml, tune based on trust
    process_noise_covariance: [
      0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01
    ]


    initial_estimate_covariance: [ # Start with higheruncertainty for global pose
      1.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
      0.0,   1.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
      0.0,   0.0,   1.0e-6,0.0,   0.0,   0.0,   0.0,   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
      0.0,   0.0,   0.0,   1.0e-6,0.0,   0.0,   0.0,   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
      0.0,   0.0,   0.0,   0.0,   1.0e-6,0.0,   0.0,   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
      0.0,   0.0,   0.0,   0.0,   0.0,   1.0e-3,0.0,   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0, # Yaw more uncertain initially
      # ... (rest similar to ekf_local, but can be larer for velocity/accel if needed)
      0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   1.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
      0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
      0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  0.0,    1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
      0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  0.0,    0.0,    1.0,    0.0,    0.0,    0.0,    0.0,    0.0,
      0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  0.0,    0.0,    0.0,    1.0,    0.0,    0.0,    0.0,    0.0,
      0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  0.0,    0.0,    0.0,    0.0,    1.0,    0.0,    0.0,    0.0,
      0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    1.0,    0.0,    0.0,
      0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1.0,    0.0,
      0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1.0]